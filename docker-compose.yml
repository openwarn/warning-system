version: "3"
services:
  controlcenter:
    image: control-center
    restart: unless-stopped
    ports:
      - '80:8001'
  dummy:
    image: dummy-service
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      - redis
      - kafka      
  nodedummy:
    image: node-dummy-service
    restart: unless-stopped
    environment: 
      KAFKA_HOST: kafka:9092
    ports:
      - "3000:3000"      
  warningdistributionservice:
    image: warning-distribution-service
    restart: unless-stopped
    ports:
      - "9101:5000"
  webdisseminator:
    image: web-disseminator
    restart: unless-stopped
  redis:
    image: "redis:alpine"
    restart: unless-stopped
  zookeeper:
    image: confluent/zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: birds:1:1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    depends_on:
      - kafka
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: random-secret
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    command: -Dpidfile.path=/dev/nul
